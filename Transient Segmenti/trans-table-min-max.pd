#N canvas 5 50 1009 708 10;
#X obj 516 339 text define chunks;
#X obj 319 709 array max segmenti1-L;
#X obj 477 709 array min segmenti1-L;
#X obj 517 666 t f f;
#X obj 319 409 f 0;
#X obj 319 378 until;
#X msg 369 377 0;
#X obj 319 580 t f f b, f 17;
#X obj 477 731 abs;
#X obj 319 734 abs;
#X obj 319 763 +, f 23;
#X msg 516 295 clear;
#X obj 319 299 / 8192;
#X obj 714 412 s set-sample-lengther;
#X obj 517 642 f;
#X obj 1211 826 s \$0-window-size;
#X obj 535 605 r \$0-window-size;
#X obj 1211 740 loadbang;
#X obj 427 206 r \$0-window-size;
#X obj 372 485 r \$0-window-size;
#X obj 813 365 s reset-chunk-count;
#X obj 319 255 t f b b b f b, f 71;
#X obj 824 829 s \$0-att-level;
#X obj 939 829 s \$0-rest-level;
#X obj 208 507 sel, f 7;
#X obj 319 343 t f f;
#X obj 319 321 i;
#X obj 319 481 *;
#X obj 373 409 + 1;
#X obj 319 503 i;
#X obj 208 529 s look-up-over;
#X obj 226 408 - 1;
#X obj 319 531 t f f, f 52;
#X obj 1053 828 s \$0-wait-time;
#X obj 319 56 r segmenti-done-recording;
#X msg 1211 780 512;
#X obj 319 431 t f f;
#X obj 225 146 r reanalyze;
#X obj 199 359 s led;
#X obj 181 237 t b b b;
#X msg 236 274 stop;
#X msg 181 330 0;
#X msg 204 270 5;
#X obj 225 168 t b b;
#X obj 181 308 del 800;
#X obj 824 687 loadbang;
#X msg 1053 772 8;
#X msg 939 771 0.1;
#X msg 824 769 0.2;
#X text 519 376 clear the text file;
#X text 844 343 reset the count;
#X text 725 441 get the length and apply it;
#N canvas 356 69 1444 930 threshold- 0;
#X msg 435 173 0;
#X obj 279 491 max 0;
#X obj 279 439 f, f 8;
#X obj 279 229 sel 1;
#X obj 279 141 spigot 1;
#X msg 820 315 0;
#X obj 640 356 t b b b;
#X obj 279 72 t f f, f 52;
#X obj 640 210 spigot 0;
#X obj 624 499 f;
#X obj 279 717 /, f 21;
#X obj 280 879 text set chunks, f 39;
#X obj 824 781 f;
#X obj 857 781 + 1;
#X msg 842 722 0;
#X obj 842 693 r reset-chunk-count;
#X obj 624 685 /, f 11;
#X obj 698 644 r set-sample-lengther;
#X obj 824 857 s global-chunk-num, f 20;
#X obj 824 811 min 23;
#X obj 640 98 t f b;
#X msg 693 182 1;
#X obj 757 102 t b;
#X obj 640 280 sel 1;
#X obj 640 255 < 0.3;
#X obj 279 205 > 0.7;
#X obj 842 744 t f f f, f 8;
#X obj 311 180 r \$0-att-level;
#X obj 672 234 r \$0-rest-level;
#X obj 656 515 r \$0-window-size;
#X obj 655 48 t b b;
#X obj 280 811 pack, f 9;
#X obj 280 784 swap, f 9;
#X obj 279 461 -, f 13;
#X obj 367 379 r \$0-window-size;
#X obj 367 433 i;
#X obj 279 19 inlet;
#X text 324 20 measured transient;
#X obj 655 21 inlet;
#X obj 1149 19 inlet;
#X msg 332 103 1;
#X obj 1149 41 s \$0-yonumber;
#X obj 642 470 r \$0-yonumber;
#X obj 332 349 r \$0-yonumber;
#X obj 821 66 r \$0-wait-time;
#X obj 824 833 + 1;
#X obj 624 411 spigot 0;
#X msg 677 388 1;
#X obj 279 295 t b b b b b, f 40;
#X obj 624 552 max 0;
#X text 642 448 mark an end after first attack;
#X obj 279 513 t f f;
#X obj 624 591 -, f 6;
#N canvas 15 50 799 645 wait 0;
#X obj 306 266 + 1;
#X msg 391 222 0;
#X obj 271 216 spigot 0;
#X obj 271 360 t b b;
#X msg 303 383 0;
#X obj 247 109 inlet;
#X obj 384 123 inlet start;
#X obj 384 145 t b b;
#X msg 384 167 1;
#X obj 271 266 f 0;
#X obj 271 442 outlet go!;
#X text 582 220 how long to wait;
#X text 351 268 count;
#X obj 271 318 sel 20, f 34;
#X obj 544 121 inlet;
#X obj 633 120 inlet mute;
#X msg 633 142 0;
#X connect 0 0 9 1;
#X connect 1 0 9 1;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 3 1 4 0;
#X connect 4 0 2 1;
#X connect 5 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 1 0;
#X connect 8 0 2 1;
#X connect 9 0 0 0;
#X connect 9 0 13 0;
#X connect 13 0 3 0;
#X connect 14 0 13 1;
#X connect 15 0 16 0;
#X connect 16 0 2 1;
#X restore 693 152 pd wait in amount of windows;
#X text 177 206 measure attack;
#X text 394 402 back up to capture full attack;
#X text 688 273 detect rest;
#X text 730 204 open to detect for rest after x amount of windows;
#X text 902 154 abstraction to wait;
#X text 854 314 close spigot;
#X text 838 352 re open the attack spigot;
#X text 398 318 close attack;
#X text 703 78 trigger wait;
#X text 132 354 capture attack point;
#X text 692 411 reset to miss first bang;
#X text 778 513 minimum one window length;
#X text 704 663 sample length to divide back to 0-1 floats;
#X obj 624 707 t a b;
#X text 905 783 count how many chunks;
#X text 699 48 reset;
#X obj 520 444 r look-up-over;
#X obj 624 621 -, f 13;
#X obj 712 538 r \$0-window-size;
#X obj 712 593 i;
#X text 739 582 back up to capture full attack;
#X obj 712 560 * 2;
#X obj 367 401 * 5;
#X connect 0 0 4 1;
#X connect 1 0 51 0;
#X connect 2 0 33 0;
#X connect 3 0 48 0;
#X connect 4 0 25 0;
#X connect 5 0 8 1;
#X connect 6 1 40 0;
#X connect 6 2 5 0;
#X connect 7 0 4 0;
#X connect 7 1 20 0;
#X connect 8 0 24 0;
#X connect 9 0 49 0;
#X connect 10 0 32 1;
#X connect 12 0 13 0;
#X connect 12 0 19 0;
#X connect 13 0 12 1;
#X connect 14 0 26 0;
#X connect 15 0 14 0;
#X connect 16 0 67 0;
#X connect 17 0 10 1;
#X connect 17 0 16 1;
#X connect 19 0 11 1;
#X connect 19 0 45 0;
#X connect 20 0 8 0;
#X connect 20 1 53 0;
#X connect 21 0 8 1;
#X connect 22 0 53 1;
#X connect 23 0 6 0;
#X connect 24 0 23 0;
#X connect 25 0 3 0;
#X connect 26 0 12 1;
#X connect 26 1 2 1;
#X connect 26 2 46 1;
#X connect 27 0 25 1;
#X connect 28 0 24 1;
#X connect 29 0 49 1;
#X connect 30 0 48 0;
#X connect 30 1 53 3;
#X connect 31 0 11 0;
#X connect 32 0 31 0;
#X connect 32 1 31 1;
#X connect 33 0 1 0;
#X connect 34 0 76 0;
#X connect 35 0 33 1;
#X connect 36 0 7 0;
#X connect 38 0 30 0;
#X connect 39 0 41 0;
#X connect 40 0 4 1;
#X connect 42 0 9 1;
#X connect 43 0 2 1;
#X connect 44 0 53 2;
#X connect 45 0 18 0;
#X connect 46 0 9 0;
#X connect 47 0 46 1;
#X connect 48 0 2 0;
#X connect 48 1 22 0;
#X connect 48 2 0 0;
#X connect 48 3 47 0;
#X connect 48 4 46 0;
#X connect 49 0 52 0;
#X connect 51 0 10 0;
#X connect 51 1 52 1;
#X connect 52 0 71 0;
#X connect 53 0 21 0;
#X connect 67 0 32 0;
#X connect 67 1 12 0;
#X connect 70 0 9 0;
#X connect 71 0 16 0;
#X connect 72 0 75 0;
#X connect 73 0 71 1;
#X connect 75 0 73 0;
#X connect 76 0 35 0;
#X restore 319 839 pd threshold- - - - - - - - - - - --_--------- -
-;
#X text 164 378 led to show analyze;
#X obj 354 92 loadbang;
#X text 420 91 re-analyze the table when loading the saved file;
#X text 1014 395 attack level: 0-1 float \, mark an attack when this
threshold is passed;
#X text 1012 437 rest level: 0-1 float \, re-arm the attack detect
after the signal goes below this level. There is no rest mark \, the
analyzer simply chunks the sample until the next attack;
#X text 1015 495 wait time: number of 'windows' integer \, is the minimum
time the analyzer waits to look for a rest. this allows complex sounds
to be captured more accurately;
#X text 1016 549 window size: number of samples in integers \, how
big of a chunk the analyzer takes to analyze. the chunk is simply added
together to get a crude 'volume' of the sample. to follow the logic
of the program its good to keep this number a power of 2;
#X text 1019 633 if you want to change the way the anayzer works \,
fool around with these four numbers \, delete and replace them in the
message box and on start-up of the patch they will be saved.;
#X obj 380 148 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 319 206 0;
#X obj 319 232 tabread segmenti1-L-length;
#X obj 319 138 del 130;
#X connect 1 0 9 0;
#X connect 2 0 8 0;
#X connect 3 0 1 1;
#X connect 3 1 2 1;
#X connect 4 0 28 0;
#X connect 4 0 36 0;
#X connect 5 0 4 0;
#X connect 6 0 4 1;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X connect 7 2 14 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 52 0;
#X connect 11 0 0 0;
#X connect 12 0 26 0;
#X connect 14 0 3 0;
#X connect 16 0 14 1;
#X connect 17 0 35 0;
#X connect 18 0 12 1;
#X connect 19 0 27 1;
#X connect 21 0 12 0;
#X connect 21 1 6 0;
#X connect 21 2 11 0;
#X connect 21 3 52 1;
#X connect 21 4 13 0;
#X connect 21 5 20 0;
#X connect 24 0 30 0;
#X connect 25 0 5 0;
#X connect 25 1 31 0;
#X connect 26 0 25 0;
#X connect 27 0 29 0;
#X connect 28 0 4 1;
#X connect 29 0 32 0;
#X connect 31 0 24 1;
#X connect 32 0 7 0;
#X connect 32 1 52 2;
#X connect 34 0 64 0;
#X connect 35 0 15 0;
#X connect 36 0 24 0;
#X connect 36 1 27 0;
#X connect 37 0 43 0;
#X connect 39 0 44 0;
#X connect 39 1 42 0;
#X connect 39 2 40 0;
#X connect 40 0 44 0;
#X connect 41 0 38 0;
#X connect 42 0 38 0;
#X connect 43 0 39 0;
#X connect 43 1 62 0;
#X connect 44 0 41 0;
#X connect 45 0 46 0;
#X connect 45 0 47 0;
#X connect 45 0 48 0;
#X connect 46 0 33 0;
#X connect 47 0 23 0;
#X connect 48 0 22 0;
#X connect 54 0 64 0;
#X connect 61 0 64 0;
#X connect 62 0 63 0;
#X connect 63 0 21 0;
#X connect 64 0 62 0;
