#N canvas 10 50 820 636 10;
#N canvas 231 65 775 691 fft-analysis 0;
#X obj 20 126 *~;
#X obj 19 61 inlet~;
#X obj 20 150 rfft~;
#X obj 41 102 tabreceive~ \$0-hann;
#X obj 21 549 *~;
#X obj 66 530 tabreceive~ \$0-hann;
#X obj 21 476 rifft~;
#X obj 21 581 outlet~;
#X obj 43 335 wrap~;
#X obj 22 359 -~;
#X obj 22 410 /~ 44.1;
#X obj 21 505 /~ 64;
#X obj 158 366 *~;
#X obj 122 367 *~;
#X obj 16 7 block~ 512 4;
#X obj 23 384 *~ 512;
#X text 246 443 read out the delay and feedbackarrays for;
#X text 246 469 every audio block (= fft frame) and use the;
#X text 247 491 integer value of each delay bin as multiplier;
#X text 252 512 of the blocksize to calculate the pointer;
#X text 250 533 back into the vd~s before resynthesis.;
#X obj 201 385 samplerate~;
#X obj 201 363 loadbang;
#X msg 283 364 bang;
#X obj 201 407 / 1000;
#X obj 20 235 delwrite~ \$0-re 12000;
#X obj 60 212 delwrite~ \$0-im 12000;
#X obj 22 441 vd~ \$0-re;
#X obj 119 441 vd~ \$0-im;
#X text 275 211 write real and imaginary part into delay-buffer;
#X text 370 77 Just to show we're doing something \, we multiply each
channel by a gain controlled by an array in the main window. The control
is quartic-scaled for easy editing.;
#X obj 19 185 *~;
#X obj 61 185 *~;
#X obj 300 175 print~;
#X msg 316 148 bang;
#X floatatom 297 127 5 0 0 0 - - -, f 5;
#X obj 23 308 *~ 0.1;
#X obj 171 257 r \$0-delay-depth;
#X obj 171 279 * 0.1;
#X text 228 282 <-- set right scale for audio range effects;
#X obj 231 94 *~ 0.0125;
#X obj 288 48 r \$0-gain-depth;
#X obj 288 70 * 0.015;
#X obj 231 23 tabreceive~ \$1-gain;
#X obj 23 257 tabreceive~ \$1-delay;
#X obj 154 326 tabreceive~ \$1-feedback;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 31 0;
#X connect 2 1 32 0;
#X connect 3 0 0 1;
#X connect 4 0 7 0;
#X connect 5 0 4 1;
#X connect 6 0 11 0;
#X connect 8 0 9 1;
#X connect 9 0 15 0;
#X connect 10 0 27 0;
#X connect 10 0 28 0;
#X connect 11 0 4 0;
#X connect 12 0 26 0;
#X connect 13 0 25 0;
#X connect 15 0 10 0;
#X connect 21 0 24 0;
#X connect 22 0 21 0;
#X connect 23 0 21 0;
#X connect 24 0 10 1;
#X connect 27 0 6 0;
#X connect 27 0 13 0;
#X connect 28 0 6 1;
#X connect 28 0 12 0;
#X connect 31 0 25 0;
#X connect 32 0 26 0;
#X connect 34 0 33 0;
#X connect 36 0 8 0;
#X connect 36 0 9 0;
#X connect 37 0 38 0;
#X connect 38 0 36 1;
#X connect 40 0 32 1;
#X connect 40 0 31 1;
#X connect 41 0 42 0;
#X connect 42 0 40 1;
#X connect 43 0 40 0;
#X connect 44 0 36 0;
#X connect 45 0 13 1;
#X connect 45 0 12 1;
#X restore 52 492 pd fft-analysis;
#N canvas 36 63 600 441 Hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-hann 512 float 0;
#X coords 0 1 511 0 200 120 1;
#X restore 293 249 graph;
#X msg 171 263 0;
#X obj 65 312 osc~;
#X obj 65 264 samplerate~;
#X obj 65 335 *~ -0.5;
#X obj 65 358 +~ 0.5;
#X obj 57 383 tabwrite~ \$0-hann;
#X text 279 241 1;
#X text 272 359 0;
#X text 288 372 0;
#X obj 65 288 / 512;
#X obj 57 241 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 336 221 Hann window;
#X text 113 310 period 512;
#X text 90 215 recalculate Hann;
#X text 125 230 window table;
#X obj 57 146 loadbang;
#X msg 79 179 \; pd dsp 1;
#X text 40 27 The Hann window is now recomputed on 'loadbang' to make
the file smaller (it doesn't have to be saved with the array.);
#X text 474 375 511;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 11 0 1 0;
#X connect 11 0 6 0;
#X connect 16 0 11 0;
#X connect 16 0 17 0;
#X restore 170 493 pd Hann-window;
#N canvas 4 50 454 304 (subpatch) 0;
#X array \$1-delay 256 float 2;
#X coords 0 1024 256 0 512 60 1 0 0;
#X restore 26 158 graph;
#X text 12 150 2;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$1-feedback 256 float 2;
#X coords 0 1 256 0 512 60 1 0 0;
#X restore 26 254 graph;
#X text 12 310 0;
#X text 10 250 1;
#X text 28 78 in each individual bin.;
#X text 30 63 The two arrays below are for setting the delay and feedback
;
#X text 198 2 SPECTRAL DELAY;
#X text 28 99 See the fft-analysis subpatch for details how it is done.
;
#X text 26 23 Example patch for spectral delay \, utilizing Miller
;
#X text 27 38 Puckette's patch on Fourier Resynthesis.;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$1-gain 256 float 2;
#X coords 0 1 256 -0.01 512 60 1 0 0;
#X restore 25 350 graph;
#X text 12 403 0;
#X text 12 344 1;
#X text 25 413 0;
#X text 518 411 22K;
#X obj 51 513 outlet~;
#X floatatom 501 237 5 0 0 2 fb-sin#1 fb-sin -, f 5;
#X floatatom 501 140 5 0 0 2 del-sin#1 del-sin -, f 5;
#X obj 541 160 vsl 15 55 0 1024 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X msg 719 218 const \$1;
#X obj 540 256 vsl 15 55 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X msg 711 314 const \$1;
#X obj 542 352 vsl 15 55 0 1 0 0 empty gain-flat empty 0 -9 0 10 -262144
-1 -1 0 1;
#X msg 723 410 const \$1;
#X floatatom 500 333 5 0 0 2 gain-sin#1 - -, f 5;
#X obj 52 472 inlet~;
#X text 64 558 Based on patches by MSP \, Johannes Kreidler \, Orm
Finnendahl;
#X text 12 215 0;
#X obj 128 233 hsl 64 12 0 1 0 1 \$0-delay-depth empty delay-depth
4 6 1 8 -262144 -258699 -1 2200 1;
#X obj 130 329 hsl 64 12 0 1 0 1 \$0-gain-depth empty gain-depth 4
6 1 8 -262144 -258699 -1 4400 1;
#N canvas 4 50 569 300 low-pass-gain 0;
#N canvas 0 50 450 300 count256 0;
#X obj 101 155 f 0;
#X obj 133 155 + 1;
#X obj 101 79 t a b;
#X obj 103 111 until;
#X obj 162 112 0;
#X obj 103 27 inlet;
#X msg 101 51 256;
#X obj 102 192 outlet;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 202 102 pd count256;
#X obj 203 130 t a a;
#X obj 286 74 t b a;
#X floatatom 411 139 5 0 0 0 - - -, f 5;
#X obj 300 28 inlet;
#X obj 398 66 inlet;
#X obj 251 227 expr if($f1<0 \, 0 \, $f1);
#X obj 242 206 expr if($f1<$f2 \, $f3 \, $f4*$f1+($f3-$f4*$f2));
#X obj 473 67 inlet;
#X obj 449 104 t b a;
#X obj 205 260 tabwrite \$1-gain;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 1 1 10 1;
#X connect 2 0 0 0;
#X connect 2 1 7 1;
#X connect 3 0 7 2;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 9 1 7 3;
#X restore 601 461 pd low-pass-gain;
#X obj 26 438 hsl 510 15 0 256 0 0 empty lp-freq Low_pass_frequency
-2 -8 0 10 -262144 -4034 -1 42100 1;
#X obj 377 422 hsl 128 15 -0.005 -0.1 0 0 empty slope Slope -2 -8 0
10 -262144 -159808 -1 0 1;
#X text 564 604 Adapted from Frank Barnecht.;
#X obj 723 435 s \$0-gain;
#X obj 711 339 s \$0-feedback;
#X obj 719 240 s \$0-delay;
#N canvas 10 50 450 300 del-sin 0;
#N canvas 0 50 450 300 count256 0;
#X obj 101 155 f 0;
#X obj 133 155 + 1;
#X obj 101 79 t a b;
#X obj 103 111 until;
#X obj 162 112 0;
#X obj 103 27 inlet;
#X msg 101 51 256;
#X obj 102 192 outlet;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 42 131 pd count256;
#X obj 44 208 sin;
#X obj 43 159 t a a;
#X obj 44 184 / 10;
#X obj 46 232 + 1;
#X obj 47 261 * 512;
#X floatatom 120 167 5 0 0 0 - - -, f 5;
#X obj 47 95 t b a;
#X obj 47 70 inlet;
#X obj 45 289 tabwrite \$1-delay;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 2 1 9 1;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 6 0 3 1;
#X connect 7 0 0 0;
#X connect 7 1 3 1;
#X connect 8 0 7 0;
#X restore 628 154 pd del-sin;
#N canvas 608 390 519 433 fb-sin 0;
#N canvas 4 50 450 300 count256 0;
#X obj 101 155 f 0;
#X obj 133 155 + 1;
#X obj 101 79 t a b;
#X obj 103 111 until;
#X obj 162 112 0;
#X obj 103 27 inlet;
#X msg 101 51 256;
#X obj 102 192 outlet;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 234 129 pd count256;
#X obj 235 157 t a a;
#X obj 236 206 cos;
#X obj 236 182 / 20;
#X obj 236 230 + 1;
#X floatatom 296 164 5 0 0 0 - - -, f 5;
#X obj 239 93 t b a;
#X obj 239 68 inlet;
#X obj 240 292 / 2.5;
#X text 124 263 don't go to 1:;
#X obj 393 110 r fbscale;
#X obj 270 254 * 1;
#X obj 235 328 tabwrite \$1-feedback;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 12 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 11 0;
#X connect 5 0 3 1;
#X connect 6 0 0 0;
#X connect 6 1 3 1;
#X connect 7 0 6 0;
#X connect 8 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 8 0;
#X restore 630 252 pd fb-sin;
#N canvas 412 240 519 433 gain-sin 0;
#N canvas 0 50 450 300 count256 0;
#X obj 101 155 f 0;
#X obj 133 155 + 1;
#X obj 101 79 t a b;
#X obj 103 111 until;
#X obj 162 112 0;
#X obj 103 27 inlet;
#X msg 101 51 256;
#X obj 102 192 outlet;
#X connect 0 0 1 0;
#X connect 0 0 7 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 234 129 pd count256;
#X obj 235 157 t a a;
#X obj 236 206 cos;
#X obj 236 182 / 20;
#X obj 236 230 + 1;
#X obj 236 261 / 2;
#X floatatom 296 164 5 0 0 0 - - -, f 5;
#X obj 239 93 t b a;
#X obj 239 68 inlet;
#X obj 237 287 tabwrite \$1-gain;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 9 1;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 6 0 3 1;
#X connect 7 0 0 0;
#X connect 7 1 3 1;
#X connect 8 0 7 0;
#X restore 621 347 pd gain-sin;
#X connect 0 0 18 0;
#X connect 19 0 41 0;
#X connect 20 0 40 0;
#X connect 21 0 22 0;
#X connect 22 0 39 0;
#X connect 23 0 24 0;
#X connect 24 0 38 0;
#X connect 25 0 26 0;
#X connect 25 0 33 1;
#X connect 26 0 37 0;
#X connect 27 0 42 0;
#X connect 28 0 0 0;
#X connect 34 0 33 0;
#X connect 35 0 33 2;
#X coords 0 -1 1 1 560 350 1 10 120;
