#N canvas 4 50 945 721 12;
#X obj 11 13 inlet~;
#X obj 15 512 outlet~;
#N canvas 250 216 821 694 fft-analysis 0;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 19 349 +~ 1e-15;
#X obj 19 598 *~;
#X obj 52 598 tabreceive~ \$0-hann;
#X obj 127 643 expr 2/(3*$f1);
#X obj 97 425 q8_rsqrt~;
#N canvas 622 50 407 479 read-windows 0;
#X obj 102 161 /;
#X obj 102 342 outlet~;
#X obj 191 343 outlet~;
#X obj 102 124 samplerate~;
#X text 153 176 msec in a window;
#X obj 102 71 r \$0-window-size;
#N canvas 4 50 1292 886 table-read 0;
#X obj 148 34 inlet;
#X text 195 35 msec;
#X obj 148 623 *~;
#X obj 483 625 *~;
#X obj 481 211 *, f 25;
#X obj 621 64 * 0.01;
#X obj 621 95 + 69;
#X obj 621 121 mtof;
#X obj 621 148 / 440;
#X obj 621 173 t b f;
#X obj 149 649 outlet~;
#X obj 483 650 outlet~;
#X obj 502 579 tabreceive~ \$0-hann;
#X text 523 235 stretched window size (samples);
#X obj 481 125 r \$0-window-size;
#X obj 621 32 r \$0-transpo;
#N canvas 833 332 794 580 phasor-loop 0;
#X obj 20 38 inlet;
#X obj 74 212 *~, f 11;
#X obj 148 180 - 2;
#X obj 74 236 +~ 1;
#X text 181 182 convert to the sample length of window;
#X obj 253 22 inlet;
#X text 301 25 window size stretched;
#X obj 74 292 outlet~;
#X text 61 41 hz;
#X obj 74 164 phasor~;
#X obj 128 89 0;
#X obj 128 31 bang~;
#X connect 0 0 9 0;
#X connect 1 0 3 0;
#X connect 2 0 1 1;
#X connect 3 0 7 0;
#X connect 5 0 2 0;
#X connect 9 0 1 0;
#X connect 10 0 9 1;
#X connect 11 0 10 0;
#X restore 148 283 pd phasor-loop;
#X f 48;
#X obj 481 235 t a a;
#X obj 672 391 / 4;
#X obj 148 58 * 4;
#X obj 482 418 pack 0 \$0;
#X msg 482 442 set \$2-sample\$1;
#X obj 482 379 + 1;
#X obj 482 348 r \$0-new-table;
#X obj 148 537 tabread4~ \$0-sample1;
#X obj 482 537 tabread4~ \$0-sample1;
#X connect 0 0 19 0;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 4 0 17 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 4 0;
#X connect 9 1 4 1;
#X connect 12 0 3 1;
#X connect 12 0 2 1;
#X connect 14 0 4 0;
#X connect 15 0 5 0;
#X connect 16 0 24 0;
#X connect 16 0 25 0;
#X connect 17 0 16 1;
#X connect 17 1 18 0;
#X connect 18 0 25 1;
#X connect 19 0 16 0;
#X connect 20 0 21 0;
#X connect 21 0 24 0;
#X connect 21 0 25 0;
#X connect 22 0 20 0;
#X connect 23 0 22 0;
#X connect 24 0 2 0;
#X connect 25 0 3 0;
#X restore 102 264 pd table-read;
#X obj 102 95 t b f, f 7;
#X connect 0 0 6 0;
#X connect 3 0 0 0;
#X connect 5 0 7 0;
#X connect 6 0 1 0;
#X connect 6 1 2 0;
#X connect 7 0 3 0;
#X connect 7 1 0 1;
#X restore 109 133 pd read-windows;
#X text 272 5 recall previous output amplitude. Its phase will be added
to the phase difference we measure from two windows in the the recorded
sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-20;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 35 300 *~;
#X obj 159 312 *~;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 249 370 Normalize again \, this time taking care to salt each
channel with 1e-15 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 288 427 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 387 540 'set' message to block;
#X text 390 557 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X obj 19 8 tabreceive~ \$0-prev-real;
#X obj 73 29 tabreceive~ \$0-prev-imag;
#X obj 136 543 tabsend~ \$0-prev-imag;
#X obj 136 567 tabsend~ \$0-prev-real;
#X obj 127 622 r \$0-window-size;
#X obj 483 589 r \$0-window-size;
#X obj 181 290 r \$0-lock;
#X obj 458 664 switch~;
#X msg 482 619 set \$1 4 1;
#X obj 309 569 r \$0-switch;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 55 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 54 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 37 0;
#X connect 10 0 36 0;
#X connect 10 0 42 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 23 0;
#X connect 17 0 18 0;
#X connect 18 0 26 0;
#X connect 19 0 38 0;
#X connect 19 0 39 0;
#X connect 19 0 43 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 22 0 17 1;
#X connect 22 0 17 0;
#X connect 22 0 20 0;
#X connect 23 0 12 0;
#X connect 24 0 23 1;
#X connect 25 0 12 1;
#X connect 26 0 20 1;
#X connect 26 0 21 1;
#X connect 27 0 14 0;
#X connect 27 1 13 0;
#X connect 29 0 31 1;
#X connect 30 0 31 0;
#X connect 31 0 33 0;
#X connect 32 0 34 1;
#X connect 32 0 35 1;
#X connect 33 0 32 0;
#X connect 34 0 8 0;
#X connect 34 0 7 0;
#X connect 35 0 9 0;
#X connect 35 0 6 0;
#X connect 36 0 40 0;
#X connect 37 0 40 0;
#X connect 38 0 41 0;
#X connect 39 0 41 0;
#X connect 40 0 42 1;
#X connect 41 0 43 1;
#X connect 42 0 22 0;
#X connect 43 0 11 0;
#X connect 43 0 11 1;
#X connect 43 0 21 0;
#X connect 52 0 30 1;
#X connect 52 0 30 0;
#X connect 52 0 35 0;
#X connect 53 0 29 1;
#X connect 53 0 29 0;
#X connect 53 0 34 0;
#X connect 56 0 25 0;
#X connect 57 0 60 0;
#X connect 58 0 40 1;
#X connect 58 0 41 1;
#X connect 60 0 59 0;
#X connect 61 0 59 0;
#X restore 16 470 pd fft-analysis;
#N canvas 467 248 588 388 phase-tables 0;
#X obj 22 45 array define \$0-prev-real;
#X obj 20 79 array define \$0-prev-imag;
#X obj 247 54 r \$0-init;
#X obj 247 78 f \$1;
#X text 287 79 window size in samples;
#X obj 247 102 t f f;
#X obj 247 152 array size \$0-prev-imag;
#X obj 279 126 array size \$0-prev-real;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X restore 509 433 pd phase-tables;
#X text 572 233 in cents;
#N canvas 4 111 565 453 hann-window 0;
#X obj 418 215 osc~;
#X obj 418 240 *~ -0.5;
#X obj 418 264 +~ 0.5;
#X obj 402 318 tabwrite~ \$0-hann;
#X obj 38 223 /;
#X obj 119 147 samplerate~;
#X obj 126 209 swap;
#X obj 126 233 /;
#X obj 49 291 * 1000;
#X obj 38 115 t f b f, f 26;
#X msg 443 173 0;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 91 379 array define \$0-hann;
#X obj 217 169 array size \$0-hann;
#X obj 370 130 t f b b;
#X obj 119 171 t f f;
#X obj 126 266 s \$0-window-hz;
#X obj 370 104 r \$0-window-hz;
#X obj 49 318 s \$0-window-msec;
#X obj 38 341 s \$0-window-sec;
#X obj 38 85 r \$0-window-size;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 8 0;
#X connect 4 0 19 0;
#X connect 5 0 15 0;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 16 0;
#X connect 8 0 18 0;
#X connect 9 0 4 0;
#X connect 9 0 6 0;
#X connect 9 1 5 0;
#X connect 9 2 13 0;
#X connect 10 0 0 1;
#X connect 14 0 0 0;
#X connect 14 1 3 0;
#X connect 14 2 10 0;
#X connect 15 0 4 1;
#X connect 15 1 6 1;
#X connect 17 0 14 0;
#X connect 20 0 9 0;
#X restore 509 477 pd hann-window;
#N canvas 388 86 792 599 insample 0;
#X obj 175 77 inlet;
#X text 228 80 record trigger;
#X obj 489 98 r \$0-init;
#X obj 489 122 f \$1;
#X text 529 123 window size in samples;
#X obj 42 72 inlet~;
#N canvas 4 50 450 300 delay-window 0;
#X obj 147 192 / 44.1;
#X obj 106 237 del;
#X msg 147 120 stop;
#X obj 73 84 t b b b;
#X obj 63 26 inlet;
#X obj 106 261 outlet;
#X obj 181 33 inlet;
#X obj 147 160 \$1;
#X connect 0 0 1 1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 3 1 7 0;
#X connect 3 2 2 0;
#X connect 4 0 3 0;
#X connect 6 0 2 0;
#X connect 7 0 0 0;
#X restore 46 278 pd delay-window;
#X obj 489 249 array define \$0-sample1;
#X obj 487 275 array define \$0-sample2;
#X obj 489 203 array size \$0-sample1;
#X obj 528 176 array size \$0-sample2;
#X obj 489 148 t a a;
#X obj 350 42 v \$0-tab-track;
#X obj 263 204 v \$0-tab-track;
#X obj 175 161 t b b b b, f 13;
#X obj 263 228 == 0;
#X obj 263 291 pack 0 \$0;
#X msg 263 315 set \$2-sample\$1;
#X obj 263 252 + 1;
#X obj 93 355 v \$0-tab-track;
#X obj 93 384 == 0;
#X obj 125 436 v \$0-tab-track;
#X obj 175 101 spigot 1;
#X obj 175 125 t b b;
#X obj 252 116 0;
#X obj 299 113 1;
#X obj 219 386 tabwrite~ \$0-sample1;
#X obj 93 408 t a a;
#X obj 93 473 s \$0-new-table;
#X obj 46 302 t b b b;
#X obj 28 497 s \$0-report;
#X connect 0 0 22 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 5 0 26 0;
#X connect 6 0 29 0;
#X connect 11 0 9 0;
#X connect 11 1 10 0;
#X connect 13 0 15 0;
#X connect 14 0 6 0;
#X connect 14 1 26 0;
#X connect 14 3 13 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X connect 17 0 26 0;
#X connect 18 0 16 0;
#X connect 19 0 20 0;
#X connect 20 0 27 0;
#X connect 22 0 23 0;
#X connect 23 0 14 0;
#X connect 23 1 24 0;
#X connect 24 0 22 1;
#X connect 25 0 22 1;
#X connect 27 0 28 0;
#X connect 27 1 21 0;
#X connect 29 0 30 0;
#X connect 29 1 25 0;
#X connect 29 2 19 0;
#X restore 10 66 pd insample;
#X text 573 216 detune;
#X obj 351 26 inlet;
#N canvas 4 50 450 300 messages 0;
#X obj 37 37 inlet;
#X obj 37 215 s \$0-init;
#X obj 87 190 s \$0-detune;
#X obj 137 151 s \$0-grab;
#X obj 46 189 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 37 60 route init detune grab switch;
#X obj 187 108 s \$0-switch;
#X connect 0 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 2 0;
#X connect 5 2 3 0;
#X connect 5 3 6 0;
#X restore 351 50 pd messages;
#X obj 704 55 r \$0-init;
#X obj 704 84 f \$1;
#X obj 563 190 r \$0-detune;
#X obj 704 118 s \$0-window-size;
#X text 491 11 freezer object using miller puckette's I07.phase.vocoder
example;
#X text 484 49 Arg1: window Size in samples;
#X obj 84 26 r \$0-grab;
#X msg 500 189 0;
#X obj 563 257 s \$0-transpo;
#X obj 245 462 r \$0-report;
#X obj 245 486 outlet;
#X connect 0 0 6 0;
#X connect 2 0 1 0;
#X connect 8 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 12 0 18 0;
#X connect 16 0 6 1;
#X connect 17 0 18 0;
#X connect 19 0 20 0;
