#N canvas 261 50 1626 882 10;
#N canvas 24 200 938 700 fft-analysis 0;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 127 622 r window-size;
#X obj 426 595 r window-size;
#X obj 426 644 block~;
#X obj 19 349 +~ 1e-15;
#X obj 19 598 *~;
#X obj 52 598 tabreceive~ \$0-hann;
#X obj 127 643 expr 2/(3*$f1);
#X obj 591 563 loadbang;
#X msg 426 619 set \$1 4;
#X obj 97 425 q8_rsqrt~;
#N canvas 602 170 1006 799 read-windows 0;
#X obj 18 693 *~;
#X obj 340 448 r window-size;
#X obj 166 303 f;
#X obj 102 91 r window-size;
#X obj 102 139 /;
#X obj 195 695 *~;
#X obj 166 252 bang~;
#X obj 17 551 line~;
#X obj 102 164 * 1000;
#X obj 288 222 r speed;
#X obj 187 276 r location;
#X obj 208 305 +;
#X obj 288 275 *;
#X obj 188 371 / 1000;
#X obj 166 394 *;
#X text 198 394 reading location (samples);
#X obj 51 597 / 4;
#X obj 288 245 * 0.01;
#X floatatom 340 498 7 0 0 0 - - -, f 7;
#X obj 340 474 *;
#X obj 499 365 r transpo;
#X obj 499 387 * 0.01;
#X obj 501 408 + 69;
#X obj 502 429 mtof;
#X obj 502 451 / 440;
#X obj 375 474 t b f;
#X obj 19 719 outlet~;
#X obj 195 720 outlet~;
#X obj 218 664 tabreceive~ \$0-hann;
#X obj 803 386 r location;
#X msg 803 409 0;
#X obj 803 432 s speed;
#X obj 768 508 r speed;
#X msg 768 532 set \$1;
#X obj 768 557 s speed-set;
#X text 411 498 stretched window size (samples);
#X obj 877 507 r transpo;
#X msg 877 533 set \$1;
#X obj 877 558 s transpo-set;
#X obj 808 94 r location;
#X msg 826 278 set \$1;
#X obj 808 140 t b f;
#X obj 826 257 f;
#X obj 754 171 int;
#X obj 754 203 sel 0;
#X msg 813 174 1;
#X msg 813 197 0;
#X obj 754 228 del 300;
#X obj 826 302 s location-set;
#X obj 17 637 tabread4~ \$0-sample;
#X obj 194 637 tabread4~ \$0-sample;
#X obj 188 347 r \$0-insamprate;
#X obj 528 586 r rewind;
#X msg 528 744 \; location \$1;
#X floatatom 111 187 5 0 0 0 - - -, f 5;
#X obj 102 115 t f b;
#X obj 142 139 samplerate~;
#X obj 102 208 / 4;
#X obj 243 309 s see-loc;
#X obj 817 116 r see-loc;
#X obj 203 420 / 2;
#X obj 166 420 -;
#X text 239 417 back up 1/2 window;
#X obj 16 597 -~;
#X text 43 6 Read two windows out of the recorded sample \, one 1/4
ahead of the other. The mid point of the front window is specified
by "location". If "speed" is nonzero \, "location" automatically precesses.
;
#X obj 528 720 * -0.5;
#X text 81 601 "back" window 1/4 cycle behind "front" one;
#X text 137 205 computation period (msec) for overlap of 4;
#X text 164 186 msec in a window;
#X obj 528 666 /;
#X obj 528 691 * 1000;
#X obj 528 642 t f b;
#X obj 568 666 samplerate~;
#X obj 528 619 f;
#X msg 845 711 \; rewind bang \; speed \$1;
#X obj 845 684 r auto;
#X obj 730 685 r no-detune;
#X text 326 275 loop to precess the location according;
#X text 325 291 to the "speed" parameter.;
#X text 611 31 if location changes \, update number box;
#X text 610 50 in main window via "location-set" \, but;
#X text 613 69 taking care to limit frequency of updates.;
#X text 756 462 reflect control changes;
#X text 756 479 in main window.;
#X text 754 344 setting location by hand;
#X text 752 362 sets speed to zero.;
#X text 760 653 misc controls;
#X text 496 527 "rewind" control takes us;
#X text 499 545 to a location depending on;
#X text 499 564 stretched window size.;
#X obj 16 469 f;
#X obj 17 496 pack;
#X obj 15 440 b;
#X msg 17 523 0 \, \$1 \$2;
#X msg 730 707 \; transpo 0;
#X connect 0 0 26 0;
#X connect 1 0 19 0;
#X connect 2 0 11 0;
#X connect 2 0 14 0;
#X connect 3 0 55 0;
#X connect 4 0 8 0;
#X connect 5 0 27 0;
#X connect 6 0 2 0;
#X connect 7 0 63 0;
#X connect 7 0 50 0;
#X connect 8 0 54 0;
#X connect 8 0 57 0;
#X connect 9 0 17 0;
#X connect 10 0 2 1;
#X connect 11 0 2 1;
#X connect 11 0 58 0;
#X connect 12 0 11 1;
#X connect 13 0 14 1;
#X connect 14 0 61 0;
#X connect 16 0 63 1;
#X connect 17 0 12 0;
#X connect 18 0 16 0;
#X connect 18 0 60 0;
#X connect 18 0 73 1;
#X connect 18 0 90 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 24 0;
#X connect 24 0 25 0;
#X connect 25 0 19 0;
#X connect 25 1 19 1;
#X connect 28 0 5 1;
#X connect 28 0 0 1;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 39 0 41 0;
#X connect 40 0 48 0;
#X connect 41 0 43 0;
#X connect 41 1 42 1;
#X connect 42 0 40 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 44 0 47 0;
#X connect 45 0 43 1;
#X connect 46 0 43 1;
#X connect 47 0 46 0;
#X connect 47 0 42 0;
#X connect 49 0 0 0;
#X connect 50 0 5 0;
#X connect 51 0 13 0;
#X connect 52 0 73 0;
#X connect 55 0 4 0;
#X connect 55 1 56 0;
#X connect 56 0 4 1;
#X connect 57 0 12 1;
#X connect 57 0 91 1;
#X connect 59 0 41 0;
#X connect 60 0 61 1;
#X connect 61 0 92 0;
#X connect 61 0 49 1;
#X connect 61 0 50 1;
#X connect 63 0 49 0;
#X connect 65 0 53 0;
#X connect 69 0 70 0;
#X connect 70 0 65 0;
#X connect 71 0 69 0;
#X connect 71 1 72 0;
#X connect 72 0 69 1;
#X connect 73 0 71 0;
#X connect 75 0 74 0;
#X connect 76 0 94 0;
#X connect 90 0 91 0;
#X connect 91 0 93 0;
#X connect 92 0 90 0;
#X connect 93 0 7 0;
#X restore 109 133 pd read-windows;
#X obj 137 543 tabsend~ prev-imag;
#X obj 136 567 tabsend~ prev-real;
#X obj 20 8 tabreceive~ prev-real;
#X obj 73 29 tabreceive~ prev-imag;
#X text 272 5 recall previous output amplitude. Its phase will be added
to the phase difference we measure from two windows in the the recorded
sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-20;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 181 290 r lock;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 35 300 *~;
#X obj 159 312 *~;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 249 370 Normalize again \, this time taking care to salt each
channel with 1e-15 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 288 427 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 387 560 'set' message to block;
#X text 390 577 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X msg 591 589 \; pd dsp 1 \; window-size 1024 \; transpo 0 \; rewind
bang;
#X obj 745 621 samplerate~;
#X obj 745 645 s \$0-insamprate;
#X obj 745 586 bang;
#X obj 745 556 loadbang;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 34 0;
#X connect 2 0 15 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 33 0;
#X connect 5 0 15 1;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 47 0;
#X connect 10 0 46 0;
#X connect 10 0 52 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 26 0;
#X connect 17 0 18 0;
#X connect 18 0 31 0;
#X connect 19 0 48 0;
#X connect 19 0 49 0;
#X connect 19 0 53 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 22 0 28 0;
#X connect 23 0 30 0;
#X connect 25 0 17 1;
#X connect 25 0 17 0;
#X connect 25 0 20 0;
#X connect 26 0 12 0;
#X connect 27 0 26 1;
#X connect 28 0 12 1;
#X connect 29 0 62 0;
#X connect 30 0 24 0;
#X connect 31 0 20 1;
#X connect 31 0 21 1;
#X connect 32 0 14 0;
#X connect 32 1 13 0;
#X connect 35 0 39 1;
#X connect 35 0 39 0;
#X connect 35 0 44 0;
#X connect 36 0 38 1;
#X connect 36 0 38 0;
#X connect 36 0 43 0;
#X connect 38 0 40 1;
#X connect 39 0 40 0;
#X connect 40 0 42 0;
#X connect 41 0 43 1;
#X connect 41 0 44 1;
#X connect 42 0 41 0;
#X connect 43 0 8 0;
#X connect 43 0 7 0;
#X connect 44 0 9 0;
#X connect 44 0 6 0;
#X connect 45 0 50 1;
#X connect 45 0 51 1;
#X connect 46 0 50 0;
#X connect 47 0 50 0;
#X connect 48 0 51 0;
#X connect 49 0 51 0;
#X connect 50 0 52 1;
#X connect 51 0 53 1;
#X connect 52 0 25 0;
#X connect 53 0 11 0;
#X connect 53 0 11 1;
#X connect 53 0 21 0;
#X connect 63 0 64 0;
#X connect 65 0 63 0;
#X connect 66 0 65 0;
#X restore 78 246 pd fft-analysis;
#N canvas 261 50 647 768 phase-tables 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1;
#X restore 169 326 graph;
#N canvas 0 50 450 300 (subpatch) 0;
#X array prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1;
#X restore 170 17 graph;
#X restore 72 189 pd phase-tables;
#X obj 353 463 s transpo;
#N canvas 5 103 565 454 hann-window 0;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 72 213 pd hann-window;
#X obj 48 433 throw~ outL;
#X obj 159 433 throw~ outR;
#X obj 353 232 r knob2;
#X obj 353 255 * 2400;
#X obj 353 282 - 1200;
#X obj 342 116 r notes;
#X obj 436 281 * 100;
#X obj 353 380 + 0;
#X obj 820 494 > 1000;
#X obj 820 536 sel 1;
#X obj 435 179 stripnote;
#X obj 769 494 < 0;
#X obj 769 534 sel 1;
#X obj 837 626 f;
#X obj 763 612 f;
#X obj 900 768 f;
#X obj 835 674 t b f;
#X obj 890 719 s location;
#X obj 763 415 r see-loc;
#N canvas 111 88 1240 803 loops-start-end 0;
#X obj 520 288 *;
#X obj 715 288 *;
#X obj 555 476 +;
#X obj 553 543 expr if($f1 < $f2 \, $f1 \, $f2);
#X obj 612 213 f;
#X obj 466 248 f;
#X obj 780 125 t b f;
#X obj 641 381 t b f;
#X obj 555 449 f;
#X obj 545 598 outlet;
#X obj 372 600 outlet;
#X text 377 63 start;
#X text 543 67 dur;
#X obj 359 545 expr if($f1 <= 0 \, 0 \, $f1);
#X text 622 507 make sure loop end doesn't go down to 0;
#X text 761 541 don't set loop end past end of sample;
#X text 112 482 back up loop start to ensure there is;
#X text 24 138 compute loop start and end from start and duration;
#X text 25 156 making sure that:;
#X obj 796 68 inlet, f 8;
#X obj 550 100 inlet;
#X obj 393 99 inlet;
#X obj 555 509 + 1;
#X obj 386 490 - 1;
#X text 163 505 at least a bit;
#X text 49 176 loop is never shorter than 1;
#X connect 0 0 8 0;
#X connect 0 0 23 0;
#X connect 1 0 7 0;
#X connect 2 0 22 0;
#X connect 3 0 9 0;
#X connect 4 0 1 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 6 0 4 0;
#X connect 6 1 0 1;
#X connect 6 1 1 1;
#X connect 6 1 3 1;
#X connect 7 0 8 0;
#X connect 7 1 2 1;
#X connect 8 0 2 0;
#X connect 13 0 10 0;
#X connect 19 0 6 0;
#X connect 20 0 4 0;
#X connect 21 0 5 0;
#X connect 22 0 3 0;
#X connect 23 0 13 0;
#X restore 941 355 pd loops-start-end;
#X floatatom 879 420 15 0 0 0 - - -, f 15;
#X floatatom 1060 424 15 0 0 0 - - -, f 15;
#N canvas 172 131 1161 613 record-load-sample 0;
#X msg 247 286 bang;
#X obj 468 15 r aux;
#X obj 306 261 r~ inL;
#X obj 365 260 r~ inR;
#X obj 528 16 r fs;
#X obj 521 306 s led;
#X msg 543 271 0;
#X obj 471 90 sel 1 0;
#X obj 614 261 timer;
#X obj 355 409 *~;
#X obj 403 377 line~;
#X msg 426 264 1 1;
#X msg 465 265 0 2;
#X msg 506 270 1;
#X text 16 25 records as long as aux button or foot switch are held
down;
#X obj 90 198 delay 2;
#X msg 101 269 stop;
#X obj 18 566 soundfiler;
#X obj 67 230 t b b;
#N canvas 0 50 450 300 (subpatch) 0;
#X array \$0-sample 1.323e+06 float 0;
#X coords 0 1.02 1.323e+06 -1.02 200 130 1 0 0;
#X restore 790 33 graph;
#X obj 19 358 i;
#X msg 667 191 stop;
#X obj 393 128 t b b b b b;
#X msg 758 193 0;
#X obj 514 128 t b b b b b;
#X obj 470 41 i;
#X obj 470 63 change;
#X text 532 55 don't do things twice;
#X text 728 215 autostopper;
#X obj 878 196 loadbang;
#X obj 879 295 soundfiler;
#X obj 685 236 delay 30000;
#X obj 356 463 tabwrite~ \$0-sample;
#X obj 30 456 pack f s;
#X obj 69 427 symbol \$0-sample;
#X obj 882 235 symbol \$0-sample;
#X msg 879 265 read ./sound.wav \$1;
#X obj 616 439 outlet;
#X obj 832 360 / 44.1;
#X obj 338 306 hip~ 5;
#X obj 53 314 r \$0-dur;
#X obj 626 305 * 44.1;
#X obj 632 344 s \$0-dur;
#X obj 23 387 t f b;
#X text 82 46 max 30 seconds;
#X msg 27 484 write -nframes \$1 /tmp/state/sound.wav \$2;
#X connect 0 0 32 0;
#X connect 1 0 25 0;
#X connect 2 0 39 0;
#X connect 3 0 39 0;
#X connect 4 0 25 0;
#X connect 6 0 5 0;
#X connect 7 0 22 0;
#X connect 7 1 24 0;
#X connect 8 0 37 0;
#X connect 8 0 41 0;
#X connect 9 0 32 0;
#X connect 10 0 9 1;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 13 0 5 0;
#X connect 15 0 18 0;
#X connect 16 0 32 0;
#X connect 18 0 20 0;
#X connect 18 1 16 0;
#X connect 20 0 43 0;
#X connect 21 0 31 0;
#X connect 22 0 0 0;
#X connect 22 1 11 0;
#X connect 22 2 13 0;
#X connect 22 3 8 0;
#X connect 22 4 31 0;
#X connect 23 0 25 0;
#X connect 24 0 15 0;
#X connect 24 1 12 0;
#X connect 24 2 6 0;
#X connect 24 3 8 1;
#X connect 24 4 21 0;
#X connect 25 0 26 0;
#X connect 26 0 7 0;
#X connect 29 0 35 0;
#X connect 30 0 38 0;
#X connect 31 0 23 0;
#X connect 33 0 45 0;
#X connect 34 0 33 1;
#X connect 35 0 36 0;
#X connect 36 0 30 0;
#X connect 38 0 37 0;
#X connect 39 0 9 0;
#X connect 40 0 20 1;
#X connect 41 0 42 0;
#X connect 43 0 33 0;
#X connect 43 1 34 0;
#X connect 45 0 17 0;
#X restore 1096 221 pd record-load-sample;
#X obj 880 206 r knob3;
#X obj 880 275 line 0 5;
#X msg 880 241 \$1 40;
#X obj 995 279 line 0 5;
#X msg 995 245 \$1 40;
#X obj 995 209 r knob4;
#X floatatom 389 429 5 0 0 0 - - -, f 5;
#X obj 900 799 s speed;
#X floatatom 1096 269 5 0 0 0 - - -, f 5;
#X text 950 744 setting loc stops speed \, so make sure to send speed
again, f 21;
#X obj 574 83 loadbang;
#X msg 574 114 \; screenLine1 1: Speed \; screenLine2 2: Tune \; screenLine3
3: Start Point \; screenLine4 4: End Point \; screenLine5 Aux/FS: Hold
to REC \;;
#X text 1140 267 recurding length in ms;
#X text 1177 425 loop start end points;
#X obj 1053 632 i;
#X obj 1053 654 change -1;
#X msg 1053 676 \; screenLine3 3: Start \$1 ms;
#X obj 1139 559 i;
#X obj 1139 581 change -1;
#X msg 1139 603 \; screenLine4 4: Length \$1 ms;
#X obj 1123 512 metro 100;
#X obj 1124 483 loadbang;
#X text 697 236 remove steps in knob values for smoother scrubbing
, f 24;
#X obj 315 492 i;
#X obj 296 523 change -1;
#X msg 296 545 \; screenLine2 2: Tune \$1 cents;
#X obj 435 206 - 72;
#N canvas 5 50 450 300 pvoc-info 0;
#X text 37 61 This patch takes a sound \, analyzes windows in it both
for channel magnitude and for phase precession in each channel (compared
to another operlapping window). The real-time output recreates the
same magnitudes and phase precession \, althought the phases themselves
are in general different. You can control either the location or its
motion (setting location stops motion \, while setting a non-zero motion
causes the location to change automatically). "Rewind" goes back to
the beginning. You can use different window sizes (use the message
boxes - the number box is for readout). The "lock" feature forces phase
coherency between neighboring channels \, which makes a more present
sound but can add artifacts to the sound. Look in "pd fft-analysis"
to see the workings.;
#X text 117 33 PHASE VOCODER FOR TIME STRETCHING AND CONTRACTION;
#X text 125 242 updated for Pd version 0.44;
#X restore 73 105 pd pvoc-info;
#X obj 1061 508 -;
#X obj 1012 472 t b f;
#X text 117 33 Based on the Phase Vocoder example patch.;
#X obj 436 318 t b f b;
#X obj 572 443 < 0;
#X obj 587 352 r speed;
#X obj 571 419 f;
#X obj 572 476 sel 0 1;
#X obj 568 507 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 596 505 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 1235 481 because of the line objects after the knobs above
\, these loop points are updating very fast \, but we don't need to
send them to the screen that fast which would be wasteful., f 40;
#X text 608 383 determine if playing fwd or reverse and set start point
when key pressed, f 15;
#X text 488 347 connect to restart loop on key press, f 10;
#X obj 188 642 bang;
#X obj 211 720 - 0.5;
#X obj 211 742 * 200;
#X obj 211 770 i;
#X obj 142 729 - 0.5;
#X obj 142 751 * 200;
#X obj 142 779 i;
#X obj 142 807 abs;
#X obj 179 570 detent 0.075;
#X obj 179 536 r knob1;
#X obj 212 606 s knob1-detent;
#X msg 181 668 \; screenLine1 1: Speed: STOPPED \;;
#X msg 211 798 \; screenLine1 1: Speed: +\$1 % \;;
#X msg 142 832 \; screenLine1 1: Speed: -\$1 % \;;
#X obj 685 653 r knob1-detent;
#X obj 686 681 * 800;
#X obj 686 703 - 400;
#X obj 236 318 line~;
#X obj 247 235 sel 0;
#X msg 268 285 1 10;
#X obj 290 263 bang;
#X obj 258 187 unpack 0 0;
#X msg 247 257 0 100;
#X obj 122 379 *~ 1;
#X connect 0 0 91 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 11 0;
#X connect 9 0 14 0;
#X connect 10 0 58 0;
#X connect 11 0 2 0;
#X connect 11 0 33 0;
#X connect 11 0 50 0;
#X connect 12 0 13 0;
#X connect 13 0 17 0;
#X connect 14 0 53 0;
#X connect 15 0 16 0;
#X connect 16 0 18 0;
#X connect 17 0 20 0;
#X connect 18 0 20 0;
#X connect 19 0 34 0;
#X connect 20 0 19 0;
#X connect 20 1 21 0;
#X connect 22 0 12 0;
#X connect 22 0 15 0;
#X connect 23 0 24 0;
#X connect 23 1 25 0;
#X connect 24 0 15 1;
#X connect 24 0 17 1;
#X connect 24 0 41 1;
#X connect 24 0 56 0;
#X connect 25 0 12 1;
#X connect 25 0 18 1;
#X connect 25 0 55 0;
#X connect 26 0 35 0;
#X connect 27 0 29 0;
#X connect 28 0 23 0;
#X connect 29 0 28 0;
#X connect 30 0 23 1;
#X connect 31 0 30 0;
#X connect 32 0 31 0;
#X connect 35 0 23 2;
#X connect 37 0 38 0;
#X connect 41 0 42 0;
#X connect 42 0 43 0;
#X connect 44 0 45 0;
#X connect 45 0 46 0;
#X connect 47 0 44 0;
#X connect 47 0 41 0;
#X connect 48 0 47 0;
#X connect 50 0 51 0;
#X connect 51 0 52 0;
#X connect 53 0 10 0;
#X connect 55 0 44 1;
#X connect 56 0 55 0;
#X connect 56 1 55 1;
#X connect 58 0 11 0;
#X connect 58 1 11 1;
#X connect 58 2 61 0;
#X connect 59 0 62 0;
#X connect 60 0 61 1;
#X connect 61 0 59 0;
#X connect 62 0 63 0;
#X connect 62 1 64 0;
#X connect 63 0 17 0;
#X connect 64 0 18 0;
#X connect 68 0 79 0;
#X connect 69 0 70 0;
#X connect 70 0 71 0;
#X connect 71 0 80 0;
#X connect 72 0 73 0;
#X connect 73 0 74 0;
#X connect 74 0 75 0;
#X connect 75 0 81 0;
#X connect 76 0 72 0;
#X connect 76 0 78 0;
#X connect 76 1 68 0;
#X connect 76 1 78 0;
#X connect 76 2 69 0;
#X connect 76 2 78 0;
#X connect 77 0 76 0;
#X connect 82 0 83 0;
#X connect 83 0 84 0;
#X connect 84 0 19 0;
#X connect 86 0 90 0;
#X connect 86 1 88 0;
#X connect 87 0 85 0;
#X connect 88 0 87 0;
#X connect 89 1 86 0;
#X connect 90 0 85 0;
#X connect 91 0 5 0;
#X connect 91 0 4 0;
